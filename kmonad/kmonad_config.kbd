(defcfg
  ;; For Linux
  input  (device-file "/dev/input/by-path/platform-i8042-serio-0-event-kbd")
  ;; input  (device-file "/dev/input/event3")
  ;; input  (device-file "/dev/input/by-id/usb-Dell_Dell_Universal_Receiver-event-kbd")
  output (uinput-sink "My KMonad output"
    ;; To understand the importance of the following line, see the section on
    ;; Compose-key sequences at the near-bottom of this file.
  ;;  "/run/current-system/sw/bin/sleep 1 && /run/current-system/sw/bin/setxkbmap -option compose:ralt")
    "/usr/bin/sleep 1 && /usr/bin/setxkbmap -option compose:ralt")
  ;; cmp-seq ralt    ;; Set the compose key to `RightAlt'
  ;; cmp-seq-delay 5 ;; 5ms delay between each compose-key sequence press

  ;; For Windows
  ;; input  (low-level-hook)
  ;; output (send-event-sink)

  ;; For MacOS
  ;; input  (iokit-name "my-keyboard-product-string")
  ;; output (kext)

  ;; Comment this if you want unhandled events not to be emitted
  fallthrough true

  ;; Set this to false to disable any command-execution in KMonad
  allow-cmd true
)
(defsrc
  esc  f1   f2   f3   f4   f5   f6   f7   f8   f9   f10  f11  f12
  grv  1    2    3    4    5    6    7    8    9    0    -    =   bspc
  tab  q    w    e    r    t    y    u    i    o    p    [    ]   \
  caps a    s    d    f    g    h    j    k    l    ;    '    ret
  lsft z    x    c    v    b    n    m    ,    .    /    rsft      up        
  lctl lmet lalt           spc            ralt rmet rctl      left down rght 
)


(defalias
  nav (layer-toggle navigation)
  nr (layer-toggle number_right)
  sym (layer-toggle sym)
  aw (tap-hold-next-release 200 a lmet)
  sa (tap-hold-next-release 200 s alt)
  dc (tap-hold-next-release 200 d ctl)
  fs (tap-hold-next-release 200 f sft)
  js (tap-hold-next-release 200 j sft)
  kc (tap-hold-next-release 200 k ctl)
  la (tap-hold-next-release 200 l alt)
  spcs (tap-hold-next-release 200 spc @sym)
  spsh (tap-hold-next-release 200 spc sft)
  ww (tap-hold-next-release 200 w (around alt @nr))
  aca (tap-hold-next-release 200 a C-a)
  rtn (tap-hold-next-release 200 ret @nr)
  tbn (tap-hold-next-release 200 tab @nr)
  tba (tap-hold-next-release 200 tab alt)
  env (tap-hold-next-release 200 esc @nav)
  rc (tap-hold-next-release 200 ret ctl)
  bss (tap-hold-next-release 200 bspc @sym)
)

(deflayer qwerty
  esc  f1   f2   f3   f4   f5   f6   f7   f8   f9   f10  f11  f12
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
  @tbn  q    @ww  e    r    t    _    _    y    u    i    o    p    [
  @env @aca s    d    f    g    _    _    h    j    k    l    ;
  lsft z    x    c    v    b    _    _    n    m    ,    .         up        
  lctl caps @tba           @spsh          @bss rmet @rc           left down rght 
)


(deflayer number_right
  _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    1    2    3    4    5    _
  _    _    alt  ctl  sft  _    _    _    6    7    8    9    0
  _    _    _    _    _    _    _    _    _    _    _    _         _        
  _    _    _              _              _    _    _         _    _    _ 
)

(deflayer navigation
  _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    home pgdn pgup end  _    _
  _    _    _    bspc ret  _    _    _    left down up   rght _
  _    _    _    _    _    _    _    _    bspc pgdn _    _         _
  _    _    _              _              _    _    _         _    _    _ 
)

(deflayer sym
  _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    #    +    -    {    }    @    ^    &    @    %    _    _    _
  _    grv  *    /    [    ]    _    sft  ctl  alt  _    _    _
  _    $    '    \    \(   \)   _    <    >    _    _    _         _        
  _    _    =              _              _    _    _         _    _    _ 
)

;; (deflayer empty
;; _    _    _    _    _    _    _    _    _    _    _    _    _
;; _    _    _    _    _    _    _    _    _    _    _    _    _    _
;; _    _    _    _    _    _    _    _    _    _    _    _    _    _
;; _    _    _    _    _    _    _    _    _    _    _    _    _
;; _    _    _    _    _    _    _    _    _    _    _    _         _        
;; _    _    _              _              _    _    _         _    _    _ 
;; )
